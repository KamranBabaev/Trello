[{"D:\\Trello\\my-app\\src\\state\\store.ts":"1","D:\\Trello\\my-app\\src\\Task.tsx":"2","D:\\Trello\\my-app\\src\\todolists-api.stories.tsx":"3","D:\\Trello\\my-app\\src\\App.tsx":"4","D:\\Trello\\my-app\\src\\index.tsx":"5","D:\\Trello\\my-app\\src\\AddItemForm.tsx":"6","D:\\Trello\\my-app\\src\\state\\todolists-reducer.ts":"7","D:\\Trello\\my-app\\src\\api\\todolist-api.ts":"8","D:\\Trello\\my-app\\src\\tasks-api.stories.tsx":"9","D:\\Trello\\my-app\\src\\api\\tasks-api.ts":"10"},{"size":892,"mtime":1592818784000,"results":"11","hashOfConfig":"12"},{"size":1603,"mtime":1594154664000,"results":"13","hashOfConfig":"12"},{"size":1613,"mtime":1627556442789,"results":"14","hashOfConfig":"12"},{"size":4779,"mtime":1626976565203,"results":"15","hashOfConfig":"12"},{"size":641,"mtime":1611420546000,"results":"16","hashOfConfig":"12"},{"size":1474,"mtime":1594727720000,"results":"17","hashOfConfig":"12"},{"size":2569,"mtime":1611420546000,"results":"18","hashOfConfig":"12"},{"size":1070,"mtime":1627555592198,"results":"19","hashOfConfig":"12"},{"size":1783,"mtime":1627560847184,"results":"20","hashOfConfig":"12"},{"size":1238,"mtime":1627560662983,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1t9na0s",{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Trello\\my-app\\src\\state\\store.ts",[],"D:\\Trello\\my-app\\src\\Task.tsx",["43","44","45"],"D:\\Trello\\my-app\\src\\todolists-api.stories.tsx",["46","47"],"D:\\Trello\\my-app\\src\\App.tsx",["48","49","50","51","52","53","54","55","56","57","58","59","60"],"D:\\Trello\\my-app\\src\\index.tsx",[],"D:\\Trello\\my-app\\src\\AddItemForm.tsx",["61","62","63"],"import React, {ChangeEvent, KeyboardEvent, useState} from 'react';\r\nimport {Box, Button, FormControl, IconButton, TextField} from '@material-ui/core';\r\nimport {AddBox} from '@material-ui/icons';\r\n\r\ntype AddItemFormPropsType = {\r\n    addItem: (title: string) => void\r\n}\r\n\r\nexport const AddItemForm = React.memo(function(props: AddItemFormPropsType) {\r\n    console.log(\"AddItemForm called\")\r\n\r\n    let [title, setTitle] = useState(\"\")\r\n    let [error, setError] = useState<string | null>(null)\r\n\r\n    const addItem = () => {\r\n        if (title.trim() !== \"\") {\r\n            props.addItem(title);\r\n            setTitle(\"\");\r\n        } else {\r\n            setError(\"Title is required\");\r\n        }\r\n    }\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (error !== null) {\r\n            setError(null);\r\n        }\r\n        if (e.charCode === 13) {\r\n            addItem();\r\n        }\r\n    }\r\n\r\n    return <div>\r\n        <TextField variant=\"outlined\"\r\n                   error={!!error}\r\n                   value={title}\r\n                   onChange={onChangeHandler}\r\n                   onKeyPress={onKeyPressHandler}\r\n                   label=\"Title\"\r\n                   helperText={error}\r\n        />\r\n        <IconButton color=\"primary\" onClick={addItem}>\r\n            <AddBox />\r\n        </IconButton>\r\n    </div>\r\n})\r\n","D:\\Trello\\my-app\\src\\state\\todolists-reducer.ts",["64"],"D:\\Trello\\my-app\\src\\api\\todolist-api.ts",[],"D:\\Trello\\my-app\\src\\tasks-api.stories.tsx",["65","66","67","68"],"D:\\Trello\\my-app\\src\\api\\tasks-api.ts",["69"],{"ruleId":"70","severity":1,"message":"71","line":15,"column":97,"nodeType":"72","endLine":15,"endColumn":130,"suggestions":"73"},{"ruleId":"70","severity":1,"message":"71","line":20,"column":8,"nodeType":"72","endLine":20,"endColumn":41,"suggestions":"74"},{"ruleId":"70","severity":1,"message":"71","line":24,"column":8,"nodeType":"72","endLine":24,"endColumn":41,"suggestions":"75"},{"ruleId":"76","severity":1,"message":"77","line":2,"column":8,"nodeType":"78","messageId":"79","endLine":2,"endColumn":13},{"ruleId":"80","severity":1,"message":"81","line":62,"column":1,"nodeType":"82","endLine":64,"endColumn":2},{"ruleId":"76","severity":1,"message":"83","line":1,"column":29,"nodeType":"78","messageId":"79","endLine":1,"endColumn":39},{"ruleId":"76","severity":1,"message":"84","line":1,"column":41,"nodeType":"78","messageId":"79","endLine":1,"endColumn":49},{"ruleId":"76","severity":1,"message":"85","line":13,"column":5,"nodeType":"78","messageId":"79","endLine":13,"endColumn":21},{"ruleId":"76","severity":1,"message":"86","line":15,"column":73,"nodeType":"78","messageId":"79","endLine":15,"endColumn":85},{"ruleId":"76","severity":1,"message":"87","line":33,"column":9,"nodeType":"78","messageId":"79","endLine":33,"endColumn":20},{"ruleId":"76","severity":1,"message":"88","line":34,"column":9,"nodeType":"78","messageId":"79","endLine":34,"endColumn":20},{"ruleId":"70","severity":1,"message":"89","line":43,"column":8,"nodeType":"72","endLine":43,"endColumn":10,"suggestions":"90"},{"ruleId":"70","severity":1,"message":"89","line":48,"column":8,"nodeType":"72","endLine":48,"endColumn":10,"suggestions":"91"},{"ruleId":"70","severity":1,"message":"89","line":53,"column":8,"nodeType":"72","endLine":53,"endColumn":10,"suggestions":"92"},{"ruleId":"70","severity":1,"message":"89","line":58,"column":8,"nodeType":"72","endLine":58,"endColumn":10,"suggestions":"93"},{"ruleId":"70","severity":1,"message":"89","line":63,"column":8,"nodeType":"72","endLine":63,"endColumn":10,"suggestions":"94"},{"ruleId":"70","severity":1,"message":"89","line":68,"column":8,"nodeType":"72","endLine":68,"endColumn":10,"suggestions":"95"},{"ruleId":"70","severity":1,"message":"89","line":73,"column":8,"nodeType":"72","endLine":73,"endColumn":10,"suggestions":"96"},{"ruleId":"76","severity":1,"message":"97","line":2,"column":9,"nodeType":"78","messageId":"79","endLine":2,"endColumn":12},{"ruleId":"76","severity":1,"message":"98","line":2,"column":14,"nodeType":"78","messageId":"79","endLine":2,"endColumn":20},{"ruleId":"76","severity":1,"message":"99","line":2,"column":22,"nodeType":"78","messageId":"79","endLine":2,"endColumn":33},{"ruleId":"100","severity":1,"message":"101","line":33,"column":45,"nodeType":"102","messageId":"103","endLine":33,"endColumn":47},{"ruleId":"76","severity":1,"message":"77","line":2,"column":8,"nodeType":"78","messageId":"79","endLine":2,"endColumn":13},{"ruleId":"76","severity":1,"message":"104","line":3,"column":9,"nodeType":"78","messageId":"79","endLine":3,"endColumn":20},{"ruleId":"76","severity":1,"message":"105","line":5,"column":9,"nodeType":"78","messageId":"79","endLine":5,"endColumn":12},{"ruleId":"80","severity":1,"message":"81","line":65,"column":1,"nodeType":"82","endLine":67,"endColumn":2},{"ruleId":"76","severity":1,"message":"106","line":2,"column":9,"nodeType":"78","messageId":"79","endLine":2,"endColumn":28},"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.","ArrayExpression",["107"],["108"],["109"],"@typescript-eslint/no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'useReducer' is defined but never used.","'useState' is defined but never used.","'todolistsReducer' is defined but never used.","'tasksReducer' is defined but never used.","'todolistId1' is assigned a value but never used.","'todolistId2' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["110"],["111"],["112"],["113"],["114"],["115"],["116"],"'Box' is defined but never used.","'Button' is defined but never used.","'FormControl' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'todolistApi' is defined but never used.","'log' is defined but never used.","'UpdateDeleteResType' is defined but never used.",{"desc":"117","fix":"118"},{"desc":"117","fix":"119"},{"desc":"117","fix":"120"},{"desc":"121","fix":"122"},{"desc":"121","fix":"123"},{"desc":"121","fix":"124"},{"desc":"121","fix":"125"},{"desc":"121","fix":"126"},{"desc":"121","fix":"127"},{"desc":"121","fix":"128"},"Update the dependencies array to be: [props]",{"range":"129","text":"130"},{"range":"131","text":"130"},{"range":"132","text":"130"},"Update the dependencies array to be: [dispatch]",{"range":"133","text":"134"},{"range":"135","text":"134"},{"range":"136","text":"134"},{"range":"137","text":"134"},{"range":"138","text":"134"},{"range":"139","text":"134"},{"range":"140","text":"134"},[693,726],"[props]",[955,988],[1145,1178],[1458,1460],"[dispatch]",[1634,1636],[1843,1845],[2057,2059],[2261,2263],[2413,2415],[2597,2599]]