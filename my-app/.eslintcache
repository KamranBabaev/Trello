[{"D:\\Trello\\my-app\\src\\App.tsx":"1","D:\\Trello\\my-app\\src\\Task.tsx":"2","D:\\Trello\\my-app\\src\\index.tsx":"3","D:\\Trello\\my-app\\src\\Todolist.tsx":"4","D:\\Trello\\my-app\\src\\AddItemForm.tsx":"5","D:\\Trello\\my-app\\src\\state\\tasks-reducer.ts":"6","D:\\Trello\\my-app\\src\\api\\todolists-api.ts":"7","D:\\Trello\\my-app\\src\\state\\todolists-reducer.ts":"8","D:\\Trello\\my-app\\src\\state\\store.ts":"9"},{"size":4120,"mtime":1627631387846,"results":"10","hashOfConfig":"11"},{"size":1729,"mtime":1596076630000,"results":"12","hashOfConfig":"11"},{"size":641,"mtime":1611424226000,"results":"13","hashOfConfig":"11"},{"size":3517,"mtime":1627628771672,"results":"14","hashOfConfig":"11"},{"size":1474,"mtime":1594727720000,"results":"15","hashOfConfig":"11"},{"size":5360,"mtime":1627634440132,"results":"16","hashOfConfig":"11"},{"size":2338,"mtime":1627633267204,"results":"17","hashOfConfig":"11"},{"size":3271,"mtime":1627630217609,"results":"18","hashOfConfig":"11"},{"size":966,"mtime":1627580013712,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1t9na0s",{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Trello\\my-app\\src\\App.tsx",["42","43","44","45","46","47","48","49","50"],"D:\\Trello\\my-app\\src\\Task.tsx",["51","52","53"],"D:\\Trello\\my-app\\src\\index.tsx",[],["54","55"],"D:\\Trello\\my-app\\src\\Todolist.tsx",["56","57","58","59","60","61"],"import React, {useCallback, useEffect} from 'react'\r\nimport {AddItemForm} from './AddItemForm'\r\nimport {EditableSpan} from './EditableSpan'\r\nimport {Button, IconButton} from '@material-ui/core'\r\nimport {Delete} from '@material-ui/icons'\r\nimport {Task} from './Task'\r\nimport {TaskStatuses, TaskType} from './api/todolists-api'\r\nimport {FilterValuesType} from './state/todolists-reducer'\r\nimport {useDispatch} from \"react-redux\";\r\nimport {fetchTasksTC} from \"./state/tasks-reducer\";\r\n\r\ntype PropsType = {\r\n  id: string\r\n  title: string\r\n  tasks: Array<TaskType>\r\n  changeFilter: (value: FilterValuesType, todolistId: string) => void\r\n  addTask: (title: string, todolistId: string) => void\r\n  changeTaskStatus: (id: string, status: TaskStatuses, todolistId: string) => void\r\n  changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n  removeTask: (taskId: string, todolistId: string) => void\r\n  removeTodolist: (id: string) => void\r\n  changeTodolistTitle: (id: string, newTitle: string) => void\r\n  filter: FilterValuesType\r\n\r\n}\r\n\r\nexport const Todolist = React.memo(function (props: PropsType) {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchTasksTC(props.id))\r\n  }, [])\r\n\r\n  const addTask = useCallback((title: string) => {\r\n    props.addTask(title, props.id)\r\n  }, [props.addTask, props.id])\r\n\r\n  const removeTodolist = () => {\r\n    props.removeTodolist(props.id)\r\n  }\r\n  const changeTodolistTitle = useCallback((title: string) => {\r\n    props.changeTodolistTitle(props.id, title)\r\n  }, [props.id, props.changeTodolistTitle])\r\n\r\n  const onAllClickHandler = useCallback(() => props\r\n      .changeFilter('all', props.id), [props.id, props.changeFilter])\r\n  const onActiveClickHandler = useCallback(() => props\r\n      .changeFilter('active', props.id), [props.id, props.changeFilter])\r\n  const onCompletedClickHandler = useCallback(() => props\r\n      .changeFilter('completed', props.id), [props.id, props.changeFilter])\r\n\r\n\r\n  let tasksForTodolist = props.tasks\r\n\r\n  if (props.filter === 'active') {\r\n    tasksForTodolist = props.tasks.filter(t => t.status === TaskStatuses.New)\r\n  }\r\n  if (props.filter === 'completed') {\r\n    tasksForTodolist = props.tasks.filter(t => t.status === TaskStatuses.Completed)\r\n  }\r\n\r\n  return <div>\r\n    <h3><EditableSpan value={props.title} onChange={changeTodolistTitle}/>\r\n      <IconButton onClick={removeTodolist}>\r\n        <Delete/>\r\n      </IconButton>\r\n    </h3>\r\n    <AddItemForm addItem={addTask}/>\r\n    <div>\r\n      {\r\n        tasksForTodolist.map(t => <Task key={t.id} task={t}\r\n                                        todolistId={props.id}\r\n                                        removeTask={props.removeTask}\r\n                                        changeTaskTitle={props.changeTaskTitle}\r\n                                        changeTaskStatus={props.changeTaskStatus}\r\n        />)\r\n      }\r\n    </div>\r\n    <div style={{paddingTop: '10px'}}>\r\n      <Button variant={props.filter === 'all' ? 'outlined' : 'text'}\r\n              onClick={onAllClickHandler}\r\n              color={'default'}\r\n      >All\r\n      </Button>\r\n      <Button variant={props.filter === 'active' ? 'outlined' : 'text'}\r\n              onClick={onActiveClickHandler}\r\n              color={'primary'}>Active\r\n      </Button>\r\n      <Button variant={props.filter === 'completed' ? 'outlined' : 'text'}\r\n              onClick={onCompletedClickHandler}\r\n              color={'secondary'}>Completed\r\n      </Button>\r\n    </div>\r\n  </div>\r\n})\r\n\r\n\r\n","D:\\Trello\\my-app\\src\\AddItemForm.tsx",["62","63","64"],"import React, {ChangeEvent, KeyboardEvent, useState} from 'react';\r\nimport {Box, Button, FormControl, IconButton, TextField} from '@material-ui/core';\r\nimport {AddBox} from '@material-ui/icons';\r\n\r\ntype AddItemFormPropsType = {\r\n    addItem: (title: string) => void\r\n}\r\n\r\nexport const AddItemForm = React.memo(function(props: AddItemFormPropsType) {\r\n    console.log(\"AddItemForm called\")\r\n\r\n    let [title, setTitle] = useState(\"\")\r\n    let [error, setError] = useState<string | null>(null)\r\n\r\n    const addItem = () => {\r\n        if (title.trim() !== \"\") {\r\n            props.addItem(title);\r\n            setTitle(\"\");\r\n        } else {\r\n            setError(\"Title is required\");\r\n        }\r\n    }\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (error !== null) {\r\n            setError(null);\r\n        }\r\n        if (e.charCode === 13) {\r\n            addItem();\r\n        }\r\n    }\r\n\r\n    return <div>\r\n        <TextField variant=\"outlined\"\r\n                   error={!!error}\r\n                   value={title}\r\n                   onChange={onChangeHandler}\r\n                   onKeyPress={onKeyPressHandler}\r\n                   label=\"Title\"\r\n                   helperText={error}\r\n        />\r\n        <IconButton color=\"primary\" onClick={addItem}>\r\n            <AddBox />\r\n        </IconButton>\r\n    </div>\r\n})\r\n",["65","66"],"D:\\Trello\\my-app\\src\\state\\tasks-reducer.ts",[],"D:\\Trello\\my-app\\src\\api\\todolists-api.ts",[],"D:\\Trello\\my-app\\src\\state\\todolists-reducer.ts",[],"D:\\Trello\\my-app\\src\\state\\store.ts",[],{"ruleId":"67","severity":1,"message":"68","line":26,"column":3,"nodeType":"69","messageId":"70","endLine":26,"endColumn":12},{"ruleId":"71","severity":1,"message":"72","line":44,"column":6,"nodeType":"73","endLine":44,"endColumn":8,"suggestions":"74"},{"ruleId":"71","severity":1,"message":"75","line":51,"column":6,"nodeType":"73","endLine":51,"endColumn":8,"suggestions":"76"},{"ruleId":"71","severity":1,"message":"75","line":55,"column":6,"nodeType":"73","endLine":55,"endColumn":8,"suggestions":"77"},{"ruleId":"71","severity":1,"message":"75","line":60,"column":6,"nodeType":"73","endLine":60,"endColumn":8,"suggestions":"78"},{"ruleId":"71","severity":1,"message":"75","line":65,"column":6,"nodeType":"73","endLine":65,"endColumn":8,"suggestions":"79"},{"ruleId":"71","severity":1,"message":"75","line":70,"column":6,"nodeType":"73","endLine":70,"endColumn":8,"suggestions":"80"},{"ruleId":"71","severity":1,"message":"75","line":75,"column":6,"nodeType":"73","endLine":75,"endColumn":8,"suggestions":"81"},{"ruleId":"71","severity":1,"message":"75","line":80,"column":6,"nodeType":"73","endLine":80,"endColumn":8,"suggestions":"82"},{"ruleId":"71","severity":1,"message":"83","line":15,"column":97,"nodeType":"73","endLine":15,"endColumn":130,"suggestions":"84"},{"ruleId":"71","severity":1,"message":"83","line":20,"column":8,"nodeType":"73","endLine":20,"endColumn":41,"suggestions":"85"},{"ruleId":"71","severity":1,"message":"83","line":24,"column":8,"nodeType":"73","endLine":24,"endColumn":41,"suggestions":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"71","severity":1,"message":"91","line":33,"column":6,"nodeType":"73","endLine":33,"endColumn":8,"suggestions":"92"},{"ruleId":"71","severity":1,"message":"83","line":37,"column":6,"nodeType":"73","endLine":37,"endColumn":31,"suggestions":"93"},{"ruleId":"71","severity":1,"message":"83","line":44,"column":6,"nodeType":"73","endLine":44,"endColumn":43,"suggestions":"94"},{"ruleId":"71","severity":1,"message":"83","line":47,"column":39,"nodeType":"73","endLine":47,"endColumn":69,"suggestions":"95"},{"ruleId":"71","severity":1,"message":"83","line":49,"column":42,"nodeType":"73","endLine":49,"endColumn":72,"suggestions":"96"},{"ruleId":"71","severity":1,"message":"83","line":51,"column":45,"nodeType":"73","endLine":51,"endColumn":75,"suggestions":"97"},{"ruleId":"67","severity":1,"message":"98","line":2,"column":9,"nodeType":"69","messageId":"70","endLine":2,"endColumn":12},{"ruleId":"67","severity":1,"message":"99","line":2,"column":14,"nodeType":"69","messageId":"70","endLine":2,"endColumn":20},{"ruleId":"67","severity":1,"message":"100","line":2,"column":22,"nodeType":"69","messageId":"70","endLine":2,"endColumn":33},{"ruleId":"87","replacedBy":"101"},{"ruleId":"89","replacedBy":"102"},"@typescript-eslint/no-unused-vars","'addTaskAC' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["103"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["104"],["105"],["106"],["107"],["108"],["109"],["110"],"React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["111"],["112"],["113"],"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"React Hook useEffect has missing dependencies: 'dispatch' and 'props.id'. Either include them or remove the dependency array.",["116"],["117"],["118"],["119"],["120"],["121"],"'Box' is defined but never used.","'Button' is defined but never used.","'FormControl' is defined but never used.",["114"],["115"],{"desc":"122","fix":"123"},{"desc":"122","fix":"124"},{"desc":"122","fix":"125"},{"desc":"122","fix":"126"},{"desc":"122","fix":"127"},{"desc":"122","fix":"128"},{"desc":"122","fix":"129"},{"desc":"122","fix":"130"},{"desc":"131","fix":"132"},{"desc":"131","fix":"133"},{"desc":"131","fix":"134"},"no-global-assign","no-unsafe-negation",{"desc":"135","fix":"136"},{"desc":"131","fix":"137"},{"desc":"131","fix":"138"},{"desc":"131","fix":"139"},{"desc":"131","fix":"140"},{"desc":"131","fix":"141"},"Update the dependencies array to be: [dispatch]",{"range":"142","text":"143"},{"range":"144","text":"143"},{"range":"145","text":"143"},{"range":"146","text":"143"},{"range":"147","text":"143"},{"range":"148","text":"143"},{"range":"149","text":"143"},{"range":"150","text":"143"},"Update the dependencies array to be: [props]",{"range":"151","text":"152"},{"range":"153","text":"152"},{"range":"154","text":"152"},"Update the dependencies array to be: [dispatch, props.id]",{"range":"155","text":"156"},{"range":"157","text":"152"},{"range":"158","text":"152"},{"range":"159","text":"152"},{"range":"160","text":"152"},{"range":"161","text":"152"},[1016,1018],"[dispatch]",[1342,1344],[1478,1480],[1680,1682],[1882,1884],[2074,2076],[2214,2216],[2386,2388],[721,754],"[props]",[1027,1060],[1217,1250],[1221,1223],"[dispatch, props.id]",[1321,1346],[1543,1580],[1676,1706],[1806,1836],[1942,1972]]